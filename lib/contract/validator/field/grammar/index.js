// Generated automatically by nearley
// http://github.com/Hardmath123/nearley
(function () {
function id(x) {return x[0]; }
var grammar = {
    ParserRules: [
    {"name": "joi$string$1", "symbols": [{"literal":"J"}, {"literal":"o"}, {"literal":"i"}, {"literal":"."}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "joi", "symbols": ["joi$string$1", "type", "globalModifier"]},
    {"name": "type", "symbols": ["booleanType"]},
    {"name": "type", "symbols": ["dateType"]},
    {"name": "type", "symbols": ["numberType"]},
    {"name": "type", "symbols": ["stringType"]},
    {"name": "booleanType$string$1", "symbols": [{"literal":"b"}, {"literal":"o"}, {"literal":"o"}, {"literal":"l"}, {"literal":"e"}, {"literal":"a"}, {"literal":"n"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "booleanType", "symbols": ["booleanType$string$1"]},
    {"name": "booleanType$subexpression$1", "symbols": ["booleanType", "dot", "booleanTruthy"]},
    {"name": "booleanType", "symbols": ["booleanType$subexpression$1"]},
    {"name": "booleanType$subexpression$2", "symbols": ["booleanType", "dot", "booleanFalsy"]},
    {"name": "booleanType", "symbols": ["booleanType$subexpression$2"]},
    {"name": "booleanTruthy$string$1", "symbols": [{"literal":"t"}, {"literal":"r"}, {"literal":"u"}, {"literal":"t"}, {"literal":"h"}, {"literal":"y"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "booleanTruthy", "symbols": ["booleanTruthy$string$1", "truthyFalsyParam", {"literal":")"}]},
    {"name": "booleanFalsy$string$1", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"l"}, {"literal":"s"}, {"literal":"y"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "booleanFalsy", "symbols": ["booleanFalsy$string$1", "truthyFalsyParam", {"literal":")"}]},
    {"name": "truthyFalsyParam", "symbols": ["truthyFalsyValues"]},
    {"name": "truthyFalsyParam", "symbols": ["truthyFalsyArray"]},
    {"name": "truthyFalsyArray$string$1", "symbols": [{"literal":"["}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "truthyFalsyArray$ebnf$1", "symbols": []},
    {"name": "truthyFalsyArray$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":","}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "truthyFalsyArray$ebnf$1$subexpression$1", "symbols": ["truthyFalsyArray$ebnf$1$subexpression$1$string$1", "truthyFalsyValues"]},
    {"name": "truthyFalsyArray$ebnf$1", "symbols": ["truthyFalsyArray$ebnf$1", "truthyFalsyArray$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "truthyFalsyArray$string$2", "symbols": [{"literal":" "}, {"literal":"]"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "truthyFalsyArray", "symbols": ["truthyFalsyArray$string$1", "truthyFalsyValues", "truthyFalsyArray$ebnf$1", "truthyFalsyArray$string$2"]},
    {"name": "truthyFalsyValues", "symbols": ["string"]},
    {"name": "truthyFalsyValues", "symbols": ["integer"]},
    {"name": "truthyFalsyValues", "symbols": ["float"]},
    {"name": "truthyFalsyValues", "symbols": ["undefined"]},
    {"name": "dateType$string$1", "symbols": [{"literal":"d"}, {"literal":"a"}, {"literal":"t"}, {"literal":"e"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dateType$ebnf$1$subexpression$1", "symbols": ["dot", "dateMin"]},
    {"name": "dateType$ebnf$1", "symbols": ["dateType$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "dateType$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "dateType$ebnf$2$subexpression$1", "symbols": ["dot", "dateMax"]},
    {"name": "dateType$ebnf$2", "symbols": ["dateType$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "dateType$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "dateType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["dateIso"]},
    {"name": "dateType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["dateTimestamp"]},
    {"name": "dateType$ebnf$3$subexpression$1", "symbols": ["dot", "dateType$ebnf$3$subexpression$1$subexpression$1"]},
    {"name": "dateType$ebnf$3", "symbols": ["dateType$ebnf$3$subexpression$1"], "postprocess": id},
    {"name": "dateType$ebnf$3", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "dateType", "symbols": ["dateType$string$1", "dateType$ebnf$1", "dateType$ebnf$2", "dateType$ebnf$3"]},
    {"name": "dateMin$string$1", "symbols": [{"literal":"m"}, {"literal":"i"}, {"literal":"n"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dateMin", "symbols": ["dateMin$string$1", "date", {"literal":")"}]},
    {"name": "dateMax$string$1", "symbols": [{"literal":"m"}, {"literal":"a"}, {"literal":"x"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dateMax", "symbols": ["dateMax$string$1", "date", {"literal":")"}]},
    {"name": "dateIso$string$1", "symbols": [{"literal":"i"}, {"literal":"s"}, {"literal":"o"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dateIso", "symbols": ["dateIso$string$1"]},
    {"name": "dateTimestamp$string$1", "symbols": [{"literal":"t"}, {"literal":"i"}, {"literal":"m"}, {"literal":"e"}, {"literal":"s"}, {"literal":"t"}, {"literal":"a"}, {"literal":"m"}, {"literal":"p"}, {"literal":"("}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dateTimestamp$subexpression$1$string$1", "symbols": [{"literal":"u"}, {"literal":"n"}, {"literal":"i"}, {"literal":"x"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dateTimestamp$subexpression$1", "symbols": ["dateTimestamp$subexpression$1$string$1"]},
    {"name": "dateTimestamp$subexpression$1$string$2", "symbols": [{"literal":"j"}, {"literal":"a"}, {"literal":"v"}, {"literal":"a"}, {"literal":"s"}, {"literal":"c"}, {"literal":"r"}, {"literal":"i"}, {"literal":"p"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dateTimestamp$subexpression$1", "symbols": ["dateTimestamp$subexpression$1$string$2"]},
    {"name": "dateTimestamp$string$2", "symbols": [{"literal":"'"}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dateTimestamp", "symbols": ["dateTimestamp$string$1", "dateTimestamp$subexpression$1", "dateTimestamp$string$2"]},
    {"name": "date$string$1", "symbols": [{"literal":"'"}, {"literal":"n"}, {"literal":"o"}, {"literal":"w"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "date", "symbols": ["date$string$1"]},
    {"name": "date", "symbols": ["integer"]},
    {"name": "date$subexpression$1", "symbols": [{"literal":"'"}, "iso8601", {"literal":"'"}]},
    {"name": "date", "symbols": ["date$subexpression$1"]},
    {"name": "iso8601$ebnf$1$subexpression$1", "symbols": [{"literal":"T"}, "iso8601TimePart"]},
    {"name": "iso8601$ebnf$1", "symbols": ["iso8601$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "iso8601$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "iso8601", "symbols": ["iso8601DatePart", "iso8601$ebnf$1"]},
    {"name": "iso8601DatePart", "symbols": ["year", {"literal":"-"}, "month", {"literal":"-"}, "day"]},
    {"name": "iso8601TimePart", "symbols": ["hour", {"literal":":"}, "minute", {"literal":":"}, "second"]},
    {"name": "year$subexpression$1$string$1", "symbols": [{"literal":"0"}, {"literal":"0"}, {"literal":"0"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "year$subexpression$1", "symbols": ["year$subexpression$1$string$1", /[0-9]/]},
    {"name": "year", "symbols": ["year$subexpression$1"]},
    {"name": "year$subexpression$2$string$1", "symbols": [{"literal":"0"}, {"literal":"0"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "year$subexpression$2", "symbols": ["year$subexpression$2$string$1", /[1-9]/, /[0-9]/]},
    {"name": "year", "symbols": ["year$subexpression$2"]},
    {"name": "year$subexpression$3", "symbols": [{"literal":"0"}, /[1-9]/, /[0-9]/, /[0-9]/]},
    {"name": "year", "symbols": ["year$subexpression$3"]},
    {"name": "year$subexpression$4", "symbols": [/[1-9]/, /[0-9]/, /[0-9]/, /[0-9]/]},
    {"name": "year", "symbols": ["year$subexpression$4"]},
    {"name": "month$subexpression$1", "symbols": [{"literal":"0"}, /[1-9]/]},
    {"name": "month", "symbols": ["month$subexpression$1"]},
    {"name": "month$subexpression$2", "symbols": [{"literal":"1"}, /[0-2]/]},
    {"name": "month", "symbols": ["month$subexpression$2"]},
    {"name": "day$subexpression$1", "symbols": [{"literal":"0"}, /[1-9]/]},
    {"name": "day", "symbols": ["day$subexpression$1"]},
    {"name": "day$subexpression$2", "symbols": [/[1-2]/, /[0-9]/]},
    {"name": "day", "symbols": ["day$subexpression$2"]},
    {"name": "day$subexpression$3", "symbols": [{"literal":"3"}, /[01]/]},
    {"name": "day", "symbols": ["day$subexpression$3"]},
    {"name": "hour$subexpression$1", "symbols": [/[01]/, /[0-9]/]},
    {"name": "hour", "symbols": ["hour$subexpression$1"]},
    {"name": "hour$subexpression$2", "symbols": [{"literal":"2"}, /[0-3]/]},
    {"name": "hour", "symbols": ["hour$subexpression$2"]},
    {"name": "minute", "symbols": [/[0-5]/, /[0-9]/]},
    {"name": "second", "symbols": [/[0-5]/, /[0-9]/]},
    {"name": "numberType$string$1", "symbols": [{"literal":"n"}, {"literal":"u"}, {"literal":"m"}, {"literal":"b"}, {"literal":"e"}, {"literal":"r"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numberType$ebnf$1$subexpression$1$subexpression$1", "symbols": ["numMin"]},
    {"name": "numberType$ebnf$1$subexpression$1$subexpression$1", "symbols": ["numGreater"]},
    {"name": "numberType$ebnf$1$subexpression$1", "symbols": ["dot", "numberType$ebnf$1$subexpression$1$subexpression$1"]},
    {"name": "numberType$ebnf$1", "symbols": ["numberType$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "numberType$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "numberType$ebnf$2$subexpression$1$subexpression$1", "symbols": ["numMax"]},
    {"name": "numberType$ebnf$2$subexpression$1$subexpression$1", "symbols": ["numLess"]},
    {"name": "numberType$ebnf$2$subexpression$1", "symbols": ["dot", "numberType$ebnf$2$subexpression$1$subexpression$1"]},
    {"name": "numberType$ebnf$2", "symbols": ["numberType$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "numberType$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "numberType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["numInteger"]},
    {"name": "numberType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["numPrecision"]},
    {"name": "numberType$ebnf$3$subexpression$1", "symbols": ["dot", "numberType$ebnf$3$subexpression$1$subexpression$1"]},
    {"name": "numberType$ebnf$3", "symbols": ["numberType$ebnf$3$subexpression$1"], "postprocess": id},
    {"name": "numberType$ebnf$3", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "numberType$ebnf$4$subexpression$1", "symbols": ["dot", "numMultiple"]},
    {"name": "numberType$ebnf$4", "symbols": ["numberType$ebnf$4$subexpression$1"], "postprocess": id},
    {"name": "numberType$ebnf$4", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "numberType$ebnf$5$subexpression$1$subexpression$1", "symbols": ["numPositive"]},
    {"name": "numberType$ebnf$5$subexpression$1$subexpression$1", "symbols": ["numNegative"]},
    {"name": "numberType$ebnf$5$subexpression$1", "symbols": ["dot", "numberType$ebnf$5$subexpression$1$subexpression$1"]},
    {"name": "numberType$ebnf$5", "symbols": ["numberType$ebnf$5$subexpression$1"], "postprocess": id},
    {"name": "numberType$ebnf$5", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "numberType", "symbols": ["numberType$string$1", "numberType$ebnf$1", "numberType$ebnf$2", "numberType$ebnf$3", "numberType$ebnf$4", "numberType$ebnf$5"]},
    {"name": "numMin$string$1", "symbols": [{"literal":"m"}, {"literal":"i"}, {"literal":"n"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numMin$subexpression$1", "symbols": ["integer"]},
    {"name": "numMin$subexpression$1", "symbols": ["float"]},
    {"name": "numMin", "symbols": ["numMin$string$1", "numMin$subexpression$1", {"literal":")"}]},
    {"name": "numMax$string$1", "symbols": [{"literal":"m"}, {"literal":"a"}, {"literal":"x"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numMax$subexpression$1", "symbols": ["integer"]},
    {"name": "numMax$subexpression$1", "symbols": ["float"]},
    {"name": "numMax", "symbols": ["numMax$string$1", "numMax$subexpression$1", {"literal":")"}]},
    {"name": "numGreater$string$1", "symbols": [{"literal":"g"}, {"literal":"r"}, {"literal":"e"}, {"literal":"a"}, {"literal":"t"}, {"literal":"e"}, {"literal":"r"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numGreater$subexpression$1", "symbols": ["integer"]},
    {"name": "numGreater$subexpression$1", "symbols": ["float"]},
    {"name": "numGreater", "symbols": ["numGreater$string$1", "numGreater$subexpression$1", {"literal":")"}]},
    {"name": "numLess$string$1", "symbols": [{"literal":"l"}, {"literal":"e"}, {"literal":"s"}, {"literal":"s"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numLess$subexpression$1", "symbols": ["integer"]},
    {"name": "numLess$subexpression$1", "symbols": ["float"]},
    {"name": "numLess", "symbols": ["numLess$string$1", "numLess$subexpression$1", {"literal":")"}]},
    {"name": "numInteger$string$1", "symbols": [{"literal":"i"}, {"literal":"n"}, {"literal":"t"}, {"literal":"e"}, {"literal":"g"}, {"literal":"e"}, {"literal":"r"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numInteger", "symbols": ["numInteger$string$1"]},
    {"name": "numPrecision$string$1", "symbols": [{"literal":"p"}, {"literal":"r"}, {"literal":"e"}, {"literal":"c"}, {"literal":"i"}, {"literal":"s"}, {"literal":"i"}, {"literal":"o"}, {"literal":"n"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numPrecision", "symbols": ["numPrecision$string$1", "integer", {"literal":")"}]},
    {"name": "numMultiple$string$1", "symbols": [{"literal":"m"}, {"literal":"u"}, {"literal":"l"}, {"literal":"t"}, {"literal":"i"}, {"literal":"p"}, {"literal":"l"}, {"literal":"e"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numMultiple", "symbols": ["numMultiple$string$1", "integer", {"literal":")"}]},
    {"name": "numPositive$string$1", "symbols": [{"literal":"p"}, {"literal":"o"}, {"literal":"s"}, {"literal":"i"}, {"literal":"t"}, {"literal":"i"}, {"literal":"v"}, {"literal":"e"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numPositive", "symbols": ["numPositive$string$1"]},
    {"name": "numNegative$string$1", "symbols": [{"literal":"n"}, {"literal":"e"}, {"literal":"g"}, {"literal":"a"}, {"literal":"t"}, {"literal":"i"}, {"literal":"v"}, {"literal":"e"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "numNegative", "symbols": ["numNegative$string$1"]},
    {"name": "stringType$string$1", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"r"}, {"literal":"i"}, {"literal":"n"}, {"literal":"g"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "stringType$ebnf$1$subexpression$1", "symbols": ["dot", "strInsensitive"]},
    {"name": "stringType$ebnf$1", "symbols": ["stringType$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "stringType$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["dot", "strMin"]},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$1", "symbols": ["stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1", "symbols": ["dot", "strTruncate"]},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2$subexpression$1$ebnf$1", "symbols": ["stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2$subexpression$1", "symbols": ["dot", "strMax", "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2$subexpression$1$ebnf$1"]},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2", "symbols": ["stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "stringType$ebnf$2$subexpression$1$subexpression$1", "symbols": ["stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$1", "stringType$ebnf$2$subexpression$1$subexpression$1$ebnf$2"]},
    {"name": "stringType$ebnf$2$subexpression$1", "symbols": ["stringType$ebnf$2$subexpression$1$subexpression$1"]},
    {"name": "stringType$ebnf$2$subexpression$1$ebnf$1$subexpression$1", "symbols": ["dot", "strLength"]},
    {"name": "stringType$ebnf$2$subexpression$1$ebnf$1", "symbols": ["stringType$ebnf$2$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "stringType$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "stringType$ebnf$2$subexpression$1", "symbols": ["stringType$ebnf$2$subexpression$1$ebnf$1"]},
    {"name": "stringType$ebnf$2", "symbols": ["stringType$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "stringType$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strCreditCard"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strAlphaNum"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strToken"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strEmail"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strIp"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strUri"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strGuid"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strHex"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strBase64"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strHostname"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strLowerCase"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strUpperCase"]},
    {"name": "stringType$ebnf$3$subexpression$1$subexpression$1", "symbols": ["strIsoDate"]},
    {"name": "stringType$ebnf$3$subexpression$1", "symbols": ["dot", "stringType$ebnf$3$subexpression$1$subexpression$1"]},
    {"name": "stringType$ebnf$3", "symbols": ["stringType$ebnf$3$subexpression$1"], "postprocess": id},
    {"name": "stringType$ebnf$3", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "stringType$ebnf$4$subexpression$1", "symbols": ["dot", "strTrim"]},
    {"name": "stringType$ebnf$4", "symbols": ["stringType$ebnf$4$subexpression$1"], "postprocess": id},
    {"name": "stringType$ebnf$4", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "stringType", "symbols": ["stringType$string$1", "stringType$ebnf$1", "stringType$ebnf$2", "stringType$ebnf$3", "stringType$ebnf$4"]},
    {"name": "strInsensitive$string$1", "symbols": [{"literal":"i"}, {"literal":"n"}, {"literal":"s"}, {"literal":"e"}, {"literal":"n"}, {"literal":"s"}, {"literal":"i"}, {"literal":"t"}, {"literal":"i"}, {"literal":"v"}, {"literal":"e"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strInsensitive", "symbols": ["strInsensitive$string$1"]},
    {"name": "strMin$string$1", "symbols": [{"literal":"m"}, {"literal":"i"}, {"literal":"n"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strMin$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":","}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strMin$ebnf$1$subexpression$1", "symbols": ["strMin$ebnf$1$subexpression$1$string$1", "strEncoding"]},
    {"name": "strMin$ebnf$1", "symbols": ["strMin$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "strMin$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "strMin", "symbols": ["strMin$string$1", "integer", "strMin$ebnf$1", {"literal":")"}]},
    {"name": "strMax$string$1", "symbols": [{"literal":"m"}, {"literal":"a"}, {"literal":"x"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strMax$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":","}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strMax$ebnf$1$subexpression$1", "symbols": ["strMax$ebnf$1$subexpression$1$string$1", "strEncoding"]},
    {"name": "strMax$ebnf$1", "symbols": ["strMax$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "strMax$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "strMax", "symbols": ["strMax$string$1", "integer", "strMax$ebnf$1", {"literal":")"}]},
    {"name": "strTruncate$string$1", "symbols": [{"literal":"t"}, {"literal":"r"}, {"literal":"u"}, {"literal":"n"}, {"literal":"c"}, {"literal":"a"}, {"literal":"t"}, {"literal":"e"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strTruncate$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":"t"}, {"literal":"r"}, {"literal":"u"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strTruncate$ebnf$1$subexpression$1", "symbols": ["strTruncate$ebnf$1$subexpression$1$string$1"]},
    {"name": "strTruncate$ebnf$1$subexpression$1$string$2", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"l"}, {"literal":"s"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strTruncate$ebnf$1$subexpression$1", "symbols": ["strTruncate$ebnf$1$subexpression$1$string$2"]},
    {"name": "strTruncate$ebnf$1", "symbols": ["strTruncate$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "strTruncate$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "strTruncate", "symbols": ["strTruncate$string$1", "strTruncate$ebnf$1", {"literal":")"}]},
    {"name": "strCreditCard$string$1", "symbols": [{"literal":"c"}, {"literal":"r"}, {"literal":"e"}, {"literal":"d"}, {"literal":"i"}, {"literal":"t"}, {"literal":"C"}, {"literal":"a"}, {"literal":"r"}, {"literal":"d"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strCreditCard", "symbols": ["strCreditCard$string$1"]},
    {"name": "strLength$string$1", "symbols": [{"literal":"l"}, {"literal":"e"}, {"literal":"n"}, {"literal":"g"}, {"literal":"t"}, {"literal":"h"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strLength$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":","}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strLength$ebnf$1$subexpression$1", "symbols": ["strLength$ebnf$1$subexpression$1$string$1", "strEncoding"]},
    {"name": "strLength$ebnf$1", "symbols": ["strLength$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "strLength$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "strLength", "symbols": ["strLength$string$1", "integer", "strLength$ebnf$1", {"literal":")"}]},
    {"name": "strAlphaNum$string$1", "symbols": [{"literal":"a"}, {"literal":"l"}, {"literal":"p"}, {"literal":"h"}, {"literal":"a"}, {"literal":"n"}, {"literal":"u"}, {"literal":"m"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strAlphaNum", "symbols": ["strAlphaNum$string$1"]},
    {"name": "strToken$string$1", "symbols": [{"literal":"t"}, {"literal":"o"}, {"literal":"k"}, {"literal":"e"}, {"literal":"n"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strToken", "symbols": ["strToken$string$1"]},
    {"name": "strEmail$string$1", "symbols": [{"literal":"e"}, {"literal":"m"}, {"literal":"a"}, {"literal":"i"}, {"literal":"l"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strEmail", "symbols": ["strEmail$string$1"]},
    {"name": "strIp$string$1", "symbols": [{"literal":"i"}, {"literal":"p"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIp$ebnf$1$subexpression$1", "symbols": ["strIpOptions"]},
    {"name": "strIp$ebnf$1", "symbols": ["strIp$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "strIp$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "strIp", "symbols": ["strIp$string$1", "strIp$ebnf$1", {"literal":")"}]},
    {"name": "strUri$string$1", "symbols": [{"literal":"u"}, {"literal":"r"}, {"literal":"i"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strUri", "symbols": ["strUri$string$1"]},
    {"name": "strGuid$string$1", "symbols": [{"literal":"g"}, {"literal":"u"}, {"literal":"i"}, {"literal":"d"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strGuid", "symbols": ["strGuid$string$1"]},
    {"name": "strHex$string$1", "symbols": [{"literal":"h"}, {"literal":"e"}, {"literal":"x"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strHex", "symbols": ["strHex$string$1"]},
    {"name": "strBase64$string$1", "symbols": [{"literal":"b"}, {"literal":"a"}, {"literal":"s"}, {"literal":"e"}, {"literal":"6"}, {"literal":"4"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strBase64", "symbols": ["strBase64$string$1"]},
    {"name": "strHostname$string$1", "symbols": [{"literal":"h"}, {"literal":"o"}, {"literal":"s"}, {"literal":"t"}, {"literal":"n"}, {"literal":"a"}, {"literal":"m"}, {"literal":"e"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strHostname", "symbols": ["strHostname$string$1"]},
    {"name": "strLowerCase$string$1", "symbols": [{"literal":"l"}, {"literal":"o"}, {"literal":"w"}, {"literal":"e"}, {"literal":"r"}, {"literal":"c"}, {"literal":"a"}, {"literal":"s"}, {"literal":"e"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strLowerCase", "symbols": ["strLowerCase$string$1"]},
    {"name": "strUpperCase$string$1", "symbols": [{"literal":"u"}, {"literal":"p"}, {"literal":"p"}, {"literal":"e"}, {"literal":"r"}, {"literal":"c"}, {"literal":"a"}, {"literal":"s"}, {"literal":"e"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strUpperCase", "symbols": ["strUpperCase$string$1"]},
    {"name": "strTrim$string$1", "symbols": [{"literal":"t"}, {"literal":"r"}, {"literal":"i"}, {"literal":"m"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strTrim", "symbols": ["strTrim$string$1"]},
    {"name": "strIsoDate$string$1", "symbols": [{"literal":"i"}, {"literal":"s"}, {"literal":"o"}, {"literal":"D"}, {"literal":"a"}, {"literal":"t"}, {"literal":"e"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIsoDate", "symbols": ["strIsoDate$string$1"]},
    {"name": "strEncoding$string$1", "symbols": [{"literal":"'"}, {"literal":"a"}, {"literal":"s"}, {"literal":"c"}, {"literal":"i"}, {"literal":"i"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strEncoding", "symbols": ["strEncoding$string$1"]},
    {"name": "strEncoding$string$2", "symbols": [{"literal":"'"}, {"literal":"u"}, {"literal":"t"}, {"literal":"f"}, {"literal":"8"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strEncoding", "symbols": ["strEncoding$string$2"]},
    {"name": "strEncoding$string$3", "symbols": [{"literal":"'"}, {"literal":"u"}, {"literal":"t"}, {"literal":"f"}, {"literal":"1"}, {"literal":"6"}, {"literal":"l"}, {"literal":"e"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strEncoding", "symbols": ["strEncoding$string$3"]},
    {"name": "strEncoding$string$4", "symbols": [{"literal":"'"}, {"literal":"u"}, {"literal":"c"}, {"literal":"s"}, {"literal":"2"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strEncoding", "symbols": ["strEncoding$string$4"]},
    {"name": "strEncoding$string$5", "symbols": [{"literal":"'"}, {"literal":"b"}, {"literal":"a"}, {"literal":"s"}, {"literal":"e"}, {"literal":"6"}, {"literal":"4"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strEncoding", "symbols": ["strEncoding$string$5"]},
    {"name": "strEncoding$string$6", "symbols": [{"literal":"'"}, {"literal":"l"}, {"literal":"a"}, {"literal":"t"}, {"literal":"i"}, {"literal":"n"}, {"literal":"1"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strEncoding", "symbols": ["strEncoding$string$6"]},
    {"name": "strEncoding$string$7", "symbols": [{"literal":"'"}, {"literal":"b"}, {"literal":"i"}, {"literal":"n"}, {"literal":"a"}, {"literal":"r"}, {"literal":"y"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strEncoding", "symbols": ["strEncoding$string$7"]},
    {"name": "strEncoding$string$8", "symbols": [{"literal":"'"}, {"literal":"h"}, {"literal":"e"}, {"literal":"x"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strEncoding", "symbols": ["strEncoding$string$8"]},
    {"name": "strIpOptions$string$1", "symbols": [{"literal":"{"}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpOptions$subexpression$1", "symbols": ["strIpVersionParam"]},
    {"name": "strIpOptions$subexpression$1$subexpression$1$string$1", "symbols": [{"literal":","}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpOptions$subexpression$1$subexpression$1", "symbols": ["strIpVersionParam", "strIpOptions$subexpression$1$subexpression$1$string$1", "strIpCidrParam"]},
    {"name": "strIpOptions$subexpression$1", "symbols": ["strIpOptions$subexpression$1$subexpression$1"]},
    {"name": "strIpOptions$subexpression$1", "symbols": ["strIpCidrParam"]},
    {"name": "strIpOptions$string$2", "symbols": [{"literal":" "}, {"literal":"}"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpOptions", "symbols": ["strIpOptions$string$1", "strIpOptions$subexpression$1", "strIpOptions$string$2"]},
    {"name": "strIpVersionParam$string$1", "symbols": [{"literal":"v"}, {"literal":"e"}, {"literal":"r"}, {"literal":"s"}, {"literal":"i"}, {"literal":"o"}, {"literal":"n"}, {"literal":":"}, {"literal":" "}, {"literal":"["}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpVersionParam$ebnf$1", "symbols": []},
    {"name": "strIpVersionParam$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":","}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpVersionParam$ebnf$1$subexpression$1", "symbols": ["strIpVersionParam$ebnf$1$subexpression$1$string$1", "strIpVersion"]},
    {"name": "strIpVersionParam$ebnf$1", "symbols": ["strIpVersionParam$ebnf$1", "strIpVersionParam$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "strIpVersionParam$string$2", "symbols": [{"literal":" "}, {"literal":"]"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpVersionParam", "symbols": ["strIpVersionParam$string$1", "strIpVersion", "strIpVersionParam$ebnf$1", "strIpVersionParam$string$2"]},
    {"name": "strIpVersion$string$1", "symbols": [{"literal":"'"}, {"literal":"i"}, {"literal":"p"}, {"literal":"v"}, {"literal":"4"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpVersion", "symbols": ["strIpVersion$string$1"]},
    {"name": "strIpVersion$string$2", "symbols": [{"literal":"'"}, {"literal":"i"}, {"literal":"p"}, {"literal":"v"}, {"literal":"6"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpVersion", "symbols": ["strIpVersion$string$2"]},
    {"name": "strIpVersion$string$3", "symbols": [{"literal":"'"}, {"literal":"i"}, {"literal":"p"}, {"literal":"v"}, {"literal":"f"}, {"literal":"u"}, {"literal":"t"}, {"literal":"u"}, {"literal":"r"}, {"literal":"e"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpVersion", "symbols": ["strIpVersion$string$3"]},
    {"name": "strIpCidrParam$string$1", "symbols": [{"literal":"c"}, {"literal":"i"}, {"literal":"d"}, {"literal":"r"}, {"literal":":"}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpCidrParam$subexpression$1$string$1", "symbols": [{"literal":"'"}, {"literal":"o"}, {"literal":"p"}, {"literal":"t"}, {"literal":"i"}, {"literal":"o"}, {"literal":"n"}, {"literal":"a"}, {"literal":"l"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpCidrParam$subexpression$1", "symbols": ["strIpCidrParam$subexpression$1$string$1"]},
    {"name": "strIpCidrParam$subexpression$1$string$2", "symbols": [{"literal":"'"}, {"literal":"r"}, {"literal":"e"}, {"literal":"q"}, {"literal":"u"}, {"literal":"i"}, {"literal":"r"}, {"literal":"e"}, {"literal":"d"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpCidrParam$subexpression$1", "symbols": ["strIpCidrParam$subexpression$1$string$2"]},
    {"name": "strIpCidrParam$subexpression$1$string$3", "symbols": [{"literal":"'"}, {"literal":"f"}, {"literal":"o"}, {"literal":"r"}, {"literal":"b"}, {"literal":"i"}, {"literal":"d"}, {"literal":"d"}, {"literal":"e"}, {"literal":"n"}, {"literal":"'"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "strIpCidrParam$subexpression$1", "symbols": ["strIpCidrParam$subexpression$1$string$3"]},
    {"name": "strIpCidrParam", "symbols": ["strIpCidrParam$string$1", "strIpCidrParam$subexpression$1"]},
    {"name": "globalModifier$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "globalModifier$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["dot", "allow"]},
    {"name": "globalModifier$ebnf$1$subexpression$1$ebnf$1", "symbols": ["globalModifier$ebnf$1$subexpression$1$ebnf$1", "globalModifier$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "globalModifier$ebnf$1$subexpression$1", "symbols": ["globalModifier$ebnf$1$subexpression$1$ebnf$1"]},
    {"name": "globalModifier$ebnf$1$subexpression$1$ebnf$2", "symbols": []},
    {"name": "globalModifier$ebnf$1$subexpression$1$ebnf$2$subexpression$1$subexpression$1", "symbols": ["valid"]},
    {"name": "globalModifier$ebnf$1$subexpression$1$ebnf$2$subexpression$1$subexpression$1", "symbols": ["invalid"]},
    {"name": "globalModifier$ebnf$1$subexpression$1$ebnf$2$subexpression$1", "symbols": ["dot", "globalModifier$ebnf$1$subexpression$1$ebnf$2$subexpression$1$subexpression$1"]},
    {"name": "globalModifier$ebnf$1$subexpression$1$ebnf$2", "symbols": ["globalModifier$ebnf$1$subexpression$1$ebnf$2", "globalModifier$ebnf$1$subexpression$1$ebnf$2$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "globalModifier$ebnf$1$subexpression$1", "symbols": ["globalModifier$ebnf$1$subexpression$1$ebnf$2"]},
    {"name": "globalModifier$ebnf$1", "symbols": ["globalModifier$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "globalModifier$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "globalModifier$ebnf$2$subexpression$1$subexpression$1", "symbols": ["required"]},
    {"name": "globalModifier$ebnf$2$subexpression$1$subexpression$1", "symbols": ["optional"]},
    {"name": "globalModifier$ebnf$2$subexpression$1$subexpression$1", "symbols": ["forbidden"]},
    {"name": "globalModifier$ebnf$2$subexpression$1", "symbols": ["dot", "globalModifier$ebnf$2$subexpression$1$subexpression$1"]},
    {"name": "globalModifier$ebnf$2", "symbols": ["globalModifier$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "globalModifier$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "globalModifier", "symbols": ["globalModifier$ebnf$1", "globalModifier$ebnf$2"]},
    {"name": "allow$string$1", "symbols": [{"literal":"a"}, {"literal":"l"}, {"literal":"l"}, {"literal":"o"}, {"literal":"w"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "allow", "symbols": ["allow$string$1", "globalParam", {"literal":")"}]},
    {"name": "valid$string$1", "symbols": [{"literal":"v"}, {"literal":"a"}, {"literal":"l"}, {"literal":"i"}, {"literal":"d"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "valid", "symbols": ["valid$string$1", "globalParam", {"literal":")"}]},
    {"name": "invalid$string$1", "symbols": [{"literal":"i"}, {"literal":"n"}, {"literal":"v"}, {"literal":"a"}, {"literal":"l"}, {"literal":"i"}, {"literal":"d"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "invalid", "symbols": ["invalid$string$1", "globalParam", {"literal":")"}]},
    {"name": "required$string$1", "symbols": [{"literal":"r"}, {"literal":"e"}, {"literal":"q"}, {"literal":"u"}, {"literal":"i"}, {"literal":"r"}, {"literal":"e"}, {"literal":"d"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "required", "symbols": ["required$string$1"]},
    {"name": "optional$string$1", "symbols": [{"literal":"o"}, {"literal":"p"}, {"literal":"t"}, {"literal":"i"}, {"literal":"o"}, {"literal":"n"}, {"literal":"a"}, {"literal":"l"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "optional", "symbols": ["optional$string$1"]},
    {"name": "forbidden$string$1", "symbols": [{"literal":"f"}, {"literal":"o"}, {"literal":"r"}, {"literal":"b"}, {"literal":"i"}, {"literal":"d"}, {"literal":"d"}, {"literal":"e"}, {"literal":"n"}, {"literal":"("}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "forbidden", "symbols": ["forbidden$string$1"]},
    {"name": "globalParam", "symbols": ["globalArray"]},
    {"name": "globalParam$subexpression$1$ebnf$1", "symbols": []},
    {"name": "globalParam$subexpression$1$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":","}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "globalParam$subexpression$1$ebnf$1$subexpression$1", "symbols": ["globalParam$subexpression$1$ebnf$1$subexpression$1$string$1", "globalValue"]},
    {"name": "globalParam$subexpression$1$ebnf$1", "symbols": ["globalParam$subexpression$1$ebnf$1", "globalParam$subexpression$1$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "globalParam$subexpression$1", "symbols": ["globalValue", "globalParam$subexpression$1$ebnf$1"]},
    {"name": "globalParam", "symbols": ["globalParam$subexpression$1"]},
    {"name": "globalArray$string$1", "symbols": [{"literal":"["}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "globalArray$ebnf$1", "symbols": []},
    {"name": "globalArray$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":","}, {"literal":" "}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "globalArray$ebnf$1$subexpression$1", "symbols": ["globalArray$ebnf$1$subexpression$1$string$1", "globalValue"]},
    {"name": "globalArray$ebnf$1", "symbols": ["globalArray$ebnf$1", "globalArray$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "globalArray$string$2", "symbols": [{"literal":" "}, {"literal":"]"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "globalArray", "symbols": ["globalArray$string$1", "globalValue", "globalArray$ebnf$1", "globalArray$string$2"]},
    {"name": "globalValue", "symbols": ["string"]},
    {"name": "globalValue", "symbols": ["integer"]},
    {"name": "globalValue", "symbols": ["float"]},
    {"name": "globalValue", "symbols": []},
    {"name": "globalValue", "symbols": ["undefined"]},
    {"name": "string$ebnf$1", "symbols": []},
    {"name": "string$ebnf$1$subexpression$1", "symbols": ["printableAscii"]},
    {"name": "string$ebnf$1$subexpression$1", "symbols": ["specials"]},
    {"name": "string$ebnf$1", "symbols": ["string$ebnf$1", "string$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "string", "symbols": [{"literal":"'"}, "string$ebnf$1", {"literal":"'"}]},
    {"name": "integer", "symbols": [/[0-9]/]},
    {"name": "integer$subexpression$1$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "integer$subexpression$1$ebnf$1", "symbols": ["integer$subexpression$1$ebnf$1", /[0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "integer$subexpression$1", "symbols": [/[1-9]/, "integer$subexpression$1$ebnf$1"]},
    {"name": "integer", "symbols": ["integer$subexpression$1"]},
    {"name": "float$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "float$ebnf$1", "symbols": ["float$ebnf$1", /[0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "float", "symbols": ["integer", {"literal":"."}, "float$ebnf$1"]},
    {"name": "undefined$string$1", "symbols": [{"literal":"u"}, {"literal":"n"}, {"literal":"d"}, {"literal":"e"}, {"literal":"f"}, {"literal":"i"}, {"literal":"n"}, {"literal":"e"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "undefined", "symbols": ["undefined$string$1"]},
    {"name": "dot", "symbols": [{"literal":"."}]},
    {"name": "printableAscii", "symbols": [/[\x20-\x7e]/]},
    {"name": "specials", "symbols": [/[\x09-\x0A\x0D]/]}
]
  , ParserStart: "joi"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
